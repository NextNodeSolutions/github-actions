---
name: Internal Test Workflows

# INTERNAL WORKFLOW - For testing GitHub Actions within this repository only
# This workflow is NOT accessible from external repositories
# Runs automatically on every push and can be triggered manually
# Enhanced Architecture: YAML Validation + Discovery ‚Üí [Enhanced Tests in
# parallel] ‚Üí Architecture Validation ‚Üí Summary

on:
  push:
    branches:
      - '**'  # All branches including main
  workflow_dispatch:
    inputs:
      test-scope:
        description: 'Scope of tests to run'
        required: false
        default: 'all'
        type: choice
        options:
          - all
          - atomic
          - packs
          - architecture
      debug:
        description: 'Enable debug logging'
        required: false
        default: false
        type: choice
        options:
          - true
          - false

# Prevent concurrent test runs
concurrency:
  group: internal-tests-${{ github.ref }}
  cancel-in-progress: true

jobs:
  # Step 1: Enhanced YAML validation + Action/Workflow discovery
  validate-yaml-and-discovery:
    name: üîç YAML Validation + Discovery
    runs-on: ubuntu-latest
    outputs:
      available-actions: ${{ steps.discovery.outputs.available-actions }}
      available-workflows: ${{ steps.discovery.outputs.available-workflows }}
      action-paths: ${{ steps.discovery.outputs.action-paths }}
      workflow-paths: ${{ steps.discovery.outputs.workflow-paths }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Validate all YAML files
        run: |
          echo "::group::üìã Validating YAML Files"

          # Simple YAML validation - check basic structure
          YAML_FILES=$(find . -type f \( -name "*.yml" -o -name "*.yaml" \))
          YAML_COUNT=$(echo "$YAML_FILES" | wc -l)
          
          echo "‚Ä¢ Found $YAML_COUNT YAML files to validate"
          
          # Basic validation - check each file can be read
          ERRORS=0
          while IFS= read -r file; do
            if [[ -n "$file" && -f "$file" ]]; then
              echo "‚Ä¢ Checking: $file"
              
              # Basic syntax check - look for obvious issues
              if grep -q "^[[:space:]]*-[[:space:]]*$" "$file"; then
                echo "  ‚ùå Invalid: empty list item"
                ERRORS=$((ERRORS + 1))
              elif [[ ! -s "$file" ]]; then
                echo "  ‚ùå Invalid: empty file"
                ERRORS=$((ERRORS + 1))
              else
                echo "  ‚úÖ Basic structure valid"
              fi
            fi
          done <<< "$YAML_FILES"
          
          if [[ $ERRORS -eq 0 ]]; then
            echo "‚úÖ All $YAML_COUNT YAML files passed basic validation!"
          else
            echo "‚ùå Found $ERRORS YAML issues"
            exit 1
          fi
          
          echo "::endgroup::"

      - name: Discover actions and workflows
        id: discovery
        uses: ./actions/utilities/action-discovery

  # Step 2A: Enhanced atomic action tests with reference validation
  test-atomic-actions:
    name: üî¨ Enhanced Atomic Tests
    needs: [validate-yaml-and-discovery]
    if: >
      (github.event_name == 'push' ||
      inputs.test-scope == 'all' ||
      inputs.test-scope == 'atomic') &&
      needs.validate-yaml-and-discovery.result == 'success'
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        action: ${{ fromJSON(needs.validate-yaml-and-discovery.outputs.available-actions) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Enhanced test for ${{ matrix.action.name }}
        uses: ./actions/utilities/comprehensive-test
        with:
          test-mode: 'atomic-action'
          target-path: ${{ matrix.action.path }}
          test-name: ${{ matrix.action.name }}
          validate-dependencies: 'true'
          create-test-project: 'false'
          available-actions: ${{ needs.validate-yaml-and-discovery.outputs.available-actions }}
          enable-reference-validation: 'true'

  # Step 2B: Enhanced workflow tests with reference validation
  test-pack-workflows:
    name: üì¶ Enhanced Workflow Tests
    needs: [validate-yaml-and-discovery]
    if: >
      (github.event_name == 'push' ||
      inputs.test-scope == 'all' ||
      inputs.test-scope == 'packs') &&
      needs.validate-yaml-and-discovery.result == 'success'
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        workflow: ${{ fromJSON(needs.validate-yaml-and-discovery.outputs.available-workflows) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Enhanced test for ${{ matrix.workflow.name }}
        uses: ./actions/utilities/comprehensive-test
        with:
          test-mode: 'pack-workflow'
          target-path: ${{ matrix.workflow.path }}
          test-name: ${{ matrix.workflow.name }}
          validate-dependencies: 'false'
          create-test-project: 'false'
          available-actions: ${{ needs.validate-yaml-and-discovery.outputs.available-actions }}
          enable-reference-validation: 'true'

  # Step 3: Architecture consistency validation
  test-architecture:
    name: üèóÔ∏è Architecture Validation
    needs: [validate-yaml-and-discovery, test-atomic-actions, test-pack-workflows]
    if: >
      always() &&
      (github.event_name == 'push' ||
      inputs.test-scope == 'all' ||
      inputs.test-scope == 'architecture') &&
      needs.validate-yaml-and-discovery.result == 'success' &&
      (needs.test-atomic-actions.result == 'success' ||
      needs.test-atomic-actions.result == 'skipped') &&
      (needs.test-pack-workflows.result == 'success' ||
      needs.test-pack-workflows.result == 'skipped')
    runs-on: ubuntu-latest
    outputs:
      architecture-result: ${{ steps.arch-validation.outputs.validation-result }}
      issues-found: ${{ steps.arch-validation.outputs.issues-found }}
      domain-report: ${{ steps.arch-validation.outputs.domain-report }}
      security-report: ${{ steps.arch-validation.outputs.security-report }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Validate repository architecture
        id: arch-validation
        uses: ./actions/utilities/architecture-validator
        with:
          available-actions: ${{ needs.validate-yaml-and-discovery.outputs.available-actions }}
          available-workflows: ${{ needs.validate-yaml-and-discovery.outputs.available-workflows }}

      - name: Display architecture reports
        run: |
          echo "::group::üìä Architecture Reports"
          
          echo "### Domain Organization Report"
          echo "${{ steps.arch-validation.outputs.domain-report }}"
          
          echo ""
          echo "### Security Report"
          echo "${{ steps.arch-validation.outputs.security-report }}"
          
          echo "::endgroup::"

  # Step 4: Enhanced test summary with detailed reporting
  test-summary:
    name: üìä Enhanced Test Summary
    needs:
      - validate-yaml-and-discovery
      - test-atomic-actions
      - test-pack-workflows
      - test-architecture
    if: always()
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Generate comprehensive test report
        uses: ./actions/utilities/test-summary
        with:
          test-results: |
            [
              {
                "name": "YAML Validation + Discovery",
                "result": "${{ needs.validate-yaml-and-discovery.result }}"
              },
              {
                "name": "Enhanced Atomic Actions Tests",
                "result": "${{ needs.test-atomic-actions.result }}"
              },
              {
                "name": "Enhanced Pack Workflows Tests", 
                "result": "${{ needs.test-pack-workflows.result }}"
              },
              {
                "name": "Architecture Validation",
                "result": "${{ needs.test-architecture.result }}"
              }
            ]
          title: 'üß™ Enhanced Internal Test Results'
          additional-info: |
            **Enhanced Test Flow**: YAML + Discovery ‚Üí [Enhanced Atomic + 
            Workflow Tests] ‚Üí Architecture Validation ‚Üí Summary

            **New Features**:
            ‚Ä¢ ‚úÖ Centralized action/workflow discovery
            ‚Ä¢ ‚úÖ Reference validation (uses: statements)  
            ‚Ä¢ ‚úÖ Architecture consistency checks
            ‚Ä¢ ‚úÖ Security pattern detection
            ‚Ä¢ ‚úÖ Domain organization validation

            **Architecture Summary**:
            ‚Ä¢ Issues found: ${{ needs.test-architecture.outputs.issues-found || '0' }}
            ‚Ä¢ Architecture result: ${{ needs.test-architecture.outputs.architecture-result || 'skipped' }}

            **Trigger**: ${{ github.event_name == 'workflow_dispatch'
            && format('Manual trigger (debug: {0})', inputs.debug)
            || format('Automatic trigger on {0}', github.ref_name) }}

            **Scope**: ${{ github.event_name == 'workflow_dispatch'
            && inputs.test-scope || 'all' }}
          fail-on-error: true