name: Docker Build

# EXTERNAL WORKFLOW - Atomic Docker build workflow
# Builds and optionally pushes Docker images

on:
  workflow_call:
    inputs:
      working-directory:
        description: 'Working directory'
        required: false
        default: '.'
        type: string
      dockerfile:
        description: 'Dockerfile path'
        required: false
        default: 'Dockerfile'
        type: string
      image-name:
        description: 'Docker image name'
        required: true
        type: string
      tag:
        description: 'Docker image tag'
        required: false
        default: 'latest'
        type: string
      build-args:
        description: 'Docker build arguments as JSON'
        required: false
        default: '{}'
        type: string
      push:
        description: 'Push image to registry'
        required: false
        default: false
        type: boolean
      registry:
        description: 'Docker registry URL'
        required: false
        default: 'docker.io'
        type: string
      platforms:
        description: 'Target platforms (comma-separated)'
        required: false
        default: 'linux/amd64'
        type: string
    secrets:
      REGISTRY_USERNAME:
        required: false
      REGISTRY_PASSWORD:
        required: false
    outputs:
      image-digest:
        description: 'Docker image digest'
        value: ${{ jobs.docker-build.outputs.digest }}
      full-image-name:
        description: 'Full image name with tag'
        value: ${{ jobs.docker-build.outputs.full-name }}

jobs:
  docker-build:
    name: Build Docker Image
    runs-on: ubuntu-latest
    outputs:
      digest: ${{ steps.build.outputs.digest }}
      full-name: ${{ steps.meta.outputs.tags }}
    steps:
      - uses: actions/checkout@v4
        
      - uses: docker/setup-buildx-action@v3
        
      - uses: docker/metadata-action@v5
        id: meta
        with:
          images: ${{ inputs.registry }}/${{ inputs.image-name }}
          tags: |
            type=raw,value=${{ inputs.tag }}
            type=sha,prefix={{branch}}-,priority=200
          
      - uses: docker/login-action@v3
        if: inputs.push && secrets.REGISTRY_USERNAME != '' && secrets.REGISTRY_PASSWORD != ''
        with:
          registry: ${{ inputs.registry }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}
          
      - id: build
        uses: docker/build-push-action@v5
        with:
          context: ${{ inputs.working-directory }}
          file: ${{ inputs.working-directory }}/${{ inputs.dockerfile }}
          push: ${{ inputs.push }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: ${{ inputs.platforms }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: ${{ inputs.build-args }}