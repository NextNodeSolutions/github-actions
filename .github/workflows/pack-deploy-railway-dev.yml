name: Railway Dev Deploy

on:
  workflow_call:
    inputs:
      app-name:
        description: 'Application name for Railway project'
        required: true
        type: string
      domain:
        description: 'Custom domain (leave empty for Railway URL only)'
        required: false
        default: ''
        type: string
      run-quality-checks:
        description: 'Run quality checks before deployment'
        required: false
        default: true
        type: boolean
      node-version:
        description: 'Node.js version'
        required: false
        default: '22'
        type: string
      pnpm-version:
        description: 'pnpm version'
        required: false
        default: '10.12.4'
        type: string
      working-directory:
        description: 'Working directory'
        required: false
        default: '.'
        type: string
      checkout-ref:
        description: 'Git ref to checkout'
        required: false
        default: 'develop'
        type: string
      app-env:
        description: 'Application environment (LOCAL/DEV/PROD)'
        required: false
        default: 'DEV'
        type: string
      variables:
        description: 'Environment variables as JSON object'
        required: false
        default: '{}'
        type: string
      memory-mb:
        description: 'Memory allocation in MB'
        required: false
        default: '512'
        type: string
      health-check-url:
        description: 'URL for health check'
        required: false
        default: ''
        type: string
    secrets:
      RAILWAY_API_TOKEN:
        required: true
      CLOUDFLARE_API_TOKEN:
        required: false
    outputs:
      deployed-url:
        description: 'Deployed application URL'
        value: ${{ jobs.deploy.outputs.railway-url }}
      project-id:
        description: 'Railway project ID'
        value: ${{ jobs.deploy.outputs.project-id }}
      service-id:
        description: 'Railway service ID'
        value: ${{ jobs.deploy.outputs.service-id }}

jobs:
  quality-checks:
    name: QA
    if: inputs.run-quality-checks
    uses: ./.github/workflows/pack-quality-checks.yml
    with:
      run-lint: true
      run-typecheck: true
      run-test: true
      run-build: true
      run-security: false
      test-coverage: false
      node-version: ${{ inputs.node-version }}
      pnpm-version: ${{ inputs.pnpm-version }}
      working-directory: ${{ inputs.working-directory }}
      
  deploy:
    name: Railway
    needs: [quality-checks]
    if: always() && (needs.quality-checks.result == 'success' || needs.quality-checks.result == 'skipped')
    uses: ./.github/workflows/job-deploy-railway.yml
    with:
      env: development
      short-env: dev
      app-name: ${{ inputs.app-name }}
      domain: ${{ inputs.domain }}
      checkout-ref: ${{ inputs.checkout-ref }}
      app-env: ${{ inputs.app-env }}
      variables: ${{ inputs.variables }}
      memory-mb: ${{ inputs.memory-mb }}
      health-check-url: ${{ inputs.health-check-url }}
      working-directory: ${{ inputs.working-directory }}
    secrets:
      RAILWAY_API_TOKEN: ${{ secrets.RAILWAY_API_TOKEN }}
      CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
      
  summary:
    name: Deployment Summary
    runs-on: ubuntu-latest
    needs: [quality-checks, deploy]
    if: always()
    steps:
      - name: Summary
        run: |
          echo "### 🚀 Railway Development Deployment Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "| Stage | Status |" >> $GITHUB_STEP_SUMMARY
          echo "|-------|--------|" >> $GITHUB_STEP_SUMMARY
          echo "| Quality Checks | ${{ needs.quality-checks.result || 'skipped' }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Deploy | ${{ needs.deploy.result }} |" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          # Project Information
          echo "**Project Details:**" >> $GITHUB_STEP_SUMMARY
          echo "- **Project:** ${{ inputs.app-name }} (${{ needs.deploy.outputs.project-id }})" >> $GITHUB_STEP_SUMMARY
          echo "- **Service:** dev_${{ inputs.app-name }} (${{ needs.deploy.outputs.service-id }})" >> $GITHUB_STEP_SUMMARY
          echo "- **Environment:** development" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          if [[ "${{ needs.deploy.result }}" == "success" ]]; then
            FINAL_URL="${{ needs.deploy.outputs.final-url }}"
            RAILWAY_URL="${{ needs.deploy.outputs.railway-url }}"
            CUSTOM_URL="${{ needs.deploy.outputs.custom-url }}"
            
            if [[ -n "$FINAL_URL" ]]; then
              echo "✅ **Deployed to:** $FINAL_URL" >> $GITHUB_STEP_SUMMARY
              
              if [[ -n "$CUSTOM_URL" && -n "$RAILWAY_URL" ]]; then
                echo "🌐 **Railway URL:** $RAILWAY_URL" >> $GITHUB_STEP_SUMMARY
                echo "🔗 **Custom Domain:** $CUSTOM_URL" >> $GITHUB_STEP_SUMMARY
              elif [[ -n "$RAILWAY_URL" ]]; then
                echo "🌐 **Railway URL:** $RAILWAY_URL" >> $GITHUB_STEP_SUMMARY
              fi
            else
              echo "✅ **Deployment completed** (URL not available)" >> $GITHUB_STEP_SUMMARY
            fi
            
            # Add deployment information
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "**Configuration:**" >> $GITHUB_STEP_SUMMARY
            echo "- Memory: ${{ inputs.memory-mb }}MB" >> $GITHUB_STEP_SUMMARY
            echo "- App Environment: ${{ inputs.app-env }}" >> $GITHUB_STEP_SUMMARY
            
            if [[ "${{ inputs.variables }}" != "{}" ]]; then
              echo "- Custom Environment Variables: ✅" >> $GITHUB_STEP_SUMMARY
            fi
          else
            echo "❌ **Deployment failed**" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "Please check the deployment logs for more information." >> $GITHUB_STEP_SUMMARY
            exit 1
          fi