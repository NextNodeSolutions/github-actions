name: 'Changesets Version'
description: 'Handle versioning and PR creation for changesets release process'
author: 'NextNode'

inputs:
  github-token:
    description: 'GitHub token for changesets'
    required: true
  version-script:
    description: 'Script to run for versioning'
    required: false
    default: 'changeset:version'
  commit-message:
    description: 'Commit message for version changes'
    required: false
    default: 'Version packages'

outputs:
  has-changesets:
    description: 'Whether there are pending changesets'
    value: ${{ steps.check.outputs.has-changesets }}
  published:
    description: 'Whether packages were published'
    value: ${{ steps.version.outputs.published }}
  pr-created:
    description: 'Whether a version PR was created'
    value: ${{ steps.version.outputs.pr-created }}
  pr-number:
    description: 'Version PR number if created'
    value: ${{ steps.version.outputs.pr-number }}
  pr-url:
    description: 'Version PR URL if created'
    value: ${{ steps.version.outputs.pr-url }}
  version:
    description: 'New version number'
    value: ${{ steps.version.outputs.version }}

runs:
  using: 'composite'
  steps:
    - name: Check for pending changesets
      id: check
      shell: bash
      run: |
        echo "::group::🔍 Checking for pending changesets"
        
        CHANGESET_COUNT=$(find .changeset -name "*.md" ! -name "README.md" | wc -l)
        
        if [ $CHANGESET_COUNT -gt 0 ]; then
          echo "✅ Found $CHANGESET_COUNT pending changeset(s)"
          echo "has-changesets=true" >> $GITHUB_OUTPUT
          
          echo "📋 Pending changesets:"
          find .changeset -name "*.md" ! -name "README.md" -exec basename {} \;
        else
          echo "ℹ️  No pending changesets found"
          echo "has-changesets=false" >> $GITHUB_OUTPUT
        fi
        
        echo "::endgroup::"

    - name: Run changesets version
      id: version
      shell: bash
      run: |
        echo "::group::📦 Running changesets version"
        
        # Set git configuration for changesets
        git config user.name "github-actions[bot]"
        git config user.email "github-actions[bot]@users.noreply.github.com"
        
        # Run changesets version command
        echo "🔄 Running: pnpm run ${{ inputs.version-script }}"
        pnpm run ${{ inputs.version-script }}
        
        # Check if changesets made file changes
        if ! git diff --quiet; then
          echo "✅ Version changes detected"
          
          # Get new version
          VERSION=$(node -p "require('./package.json').version")
          BRANCH_NAME="changeset-release/v$VERSION"
          
          echo "📝 New version: $VERSION"
          echo "🔀 Creating branch: $BRANCH_NAME"
          
          # Create and checkout new branch
          git checkout -b "$BRANCH_NAME"
          
          # Stage changes and commit
          git add .
          git commit -m "chore: release v$VERSION"
          
          # Push the new branch
          echo "🚀 Pushing branch to origin"
          git push origin "$BRANCH_NAME"
          
          # Create PR with version as title
          echo "🔄 Creating pull request"
          PR_URL=$(gh pr create \
            --base main \
            --title "v$VERSION" \
            --body "Release version $VERSION
            
            🤖 This PR was automatically created by the changesets workflow.
            
            ## Changes
            - Updated package version to $VERSION
            - Updated changelog
            
            ## Release Process
            - ✅ Changesets processed
            - ⏳ Waiting for quality checks
            - ⏳ Auto-merge enabled
            - ⏳ Tag will be created after merge")
          
          PR_NUMBER=$(gh pr view --json number -q .number)
          
          # Enable auto-merge
          echo "🤖 Enabling auto-merge"
          gh pr merge --auto --squash
          
          echo "published=false" >> $GITHUB_OUTPUT
          echo "pr-created=true" >> $GITHUB_OUTPUT
          echo "pr-number=$PR_NUMBER" >> $GITHUB_OUTPUT
          echo "pr-url=$PR_URL" >> $GITHUB_OUTPUT
          echo "version=$VERSION" >> $GITHUB_OUTPUT
        else
          echo "ℹ️ No version changes were made"
          echo "published=false" >> $GITHUB_OUTPUT
          echo "pr-created=false" >> $GITHUB_OUTPUT
        fi
        
        echo "::endgroup::"
      env:
        GITHUB_TOKEN: ${{ inputs.github-token }}

    - name: Display version summary
      if: steps.version.outputs.pr-created == 'true'
      shell: bash
      run: |
        echo "::group::📊 Version Summary"
        
        VERSION="${{ steps.version.outputs.version }}"
        PR_NUMBER="${{ steps.version.outputs.pr-number }}"
        PR_URL="${{ steps.version.outputs.pr-url }}"
        
        echo "📦 Version: $VERSION"
        echo "🔗 PR: #$PR_NUMBER"
        echo "🌐 URL: $PR_URL"
        
        # Show current package info
        if [[ -f "package.json" ]]; then
          PACKAGE_NAME=$(node -p "require('./package.json').name")
          echo "📋 Package: $PACKAGE_NAME@$VERSION"
        fi
        
        echo ""
        echo "✅ Pull request created successfully"
        echo "⏳ Auto-merge enabled - waiting for checks to pass"

        echo "::endgroup::"