name: 'Railway URL Generate'
description: 'Generate or retrieve Railway service URL'
author: 'NextNodeSolutions'

inputs:
  service-name:
    description: 'Railway service name'
    required: true
  railway-token:
    description: 'Railway API token'
    required: true

outputs:
  railway-url:
    description: 'Railway service URL'
    value: ${{ steps.info.outputs.railway-url }}
  domain:
    description: 'Railway domain (without protocol)'
    value: ${{ steps.info.outputs.railway-domain }}
  generated:
    description: 'Whether URL was generated (true) or retrieved (false)'
    value: ${{ steps.generate.outputs.generated }}

runs:
  using: 'composite'
  steps:
    - name: Get Railway Service Info
      id: info
      uses: NextNodeSolutions/github-actions/actions/utilities/railway-service-info@main
      with:
        service-name: ${{ inputs.service-name }}
        railway-token: ${{ inputs.railway-token }}

    - name: Generate Railway URL if Missing
      id: generate
      shell: bash
      run: |
        echo "::group::üîó Getting Railway URL"

        START_TIME=$(date +%s)
        SERVICE_NAME="${{ inputs.service-name }}"
        RAILWAY_DOMAIN="${{ steps.info.outputs.railway-domain }}"

        echo "‚Ä¢ Service: $SERVICE_NAME"

        if [ -n "$RAILWAY_DOMAIN" ] && [ "$RAILWAY_DOMAIN" != "empty" ]; then
          echo "‚Ä¢ Found existing domain: $RAILWAY_DOMAIN"
          echo "generated=false" >> $GITHUB_OUTPUT
        else
          echo "‚Ä¢ No existing domain found, generating new one..."

          # Generate Railway domain
          DOMAIN_OUTPUT=$(railway domain --json --service "$SERVICE_NAME" 2>/dev/null || echo "{}")

          if [ "$DOMAIN_OUTPUT" != "{}" ]; then
            NEW_DOMAIN=$(echo "$DOMAIN_OUTPUT" | jq -r '.domain // empty' 2>/dev/null)

            if [ -n "$NEW_DOMAIN" ] && [ "$NEW_DOMAIN" != "empty" ]; then
              # Strip any existing protocol prefix before adding https://
              NEW_DOMAIN=$(echo "$NEW_DOMAIN" | sed -E 's|^https?://||g')
              echo "‚Ä¢ Generated new domain: $NEW_DOMAIN"
              echo "generated=true" >> $GITHUB_OUTPUT
            else
              echo "‚ö†Ô∏è Failed to generate Railway domain"
              echo "generated=false" >> $GITHUB_OUTPUT
            fi
          else
            echo "‚ö†Ô∏è Failed to generate Railway domain"
            echo "generated=false" >> $GITHUB_OUTPUT
          fi
        fi

        END_TIME=$(date +%s)
        DURATION=$((END_TIME - START_TIME))

        FINAL_URL="${{ steps.info.outputs.railway-url }}"
        if [ -n "$FINAL_URL" ]; then
          echo "‚úÖ Railway URL: $FINAL_URL"
          echo "‚Ä¢ Retrieved in ${DURATION}s"
        else
          echo "‚ùå No Railway URL available"
        fi

        echo "::endgroup::"
      env:
        RAILWAY_API_TOKEN: ${{ inputs.railway-token }}
        CI: true
